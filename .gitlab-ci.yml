stages:
  - test
  - deploy
  - docker

npm-audit_dependency_scanning:
  image: registry.gitlab.com/jitesoft/open-source/javascript/audit-for-gitlab:latest
  script:
    - audit-for-gitlab
  allow_failure: true
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json

npm-test:
  stage: test
  image: jitesoft/node-base:latest
  variables:
    NODE_ENV: develop
  script:
    - npm ci
    - npm run test

npm-deploy:
  stage: deploy
  image: jitesoft/node:latest
  before_script:
    - npm ci
    - npm run build:prod
    - rm Dockerfile
    - rm scan.yml
  script:
    - npm version ${CI_COMMIT_TAG}
    - npm publish --access public
  rules:
    - if: $CI_COMMIT_TAG
      when: always
  tags: [ "protected", "npm" ]

docker-deploy:
  stage: docker
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  tags:
    - protected
    - buildx
  script:
    - MAJOR=$(echo $CI_COMMIT_TAG | cut -f1 -d'.')
    - MINOR=$(echo $CI_COMMIT_TAG | cut -f2 -d'.')
    - PATCH=$(echo $CI_COMMIT_TAG | cut -f3 -d'.')
    - GL_TAGS="-t ${CI_REGISTRY_IMAGE}:${MAJOR} -t ${CI_REGISTRY_IMAGE}:${MAJOR}.${MINOR} -t ${CI_REGISTRY_IMAGE}:${MAJOR}.${MINOR}.${PATCH} -t ${CI_REGISTRY_IMAGE}:latest"
    - HUB_TAGS="-t jitesoft/audit-for-gitlab:${MAJOR} -t jitesoft/audit-for-gitlab:${MAJOR}.${MINOR} -t jitesoft/audit-for-gitlab:${MAJOR}.${MINOR}.${PATCH} -t jitesoft/audit-for-gitlab:latest"
    - docker buildx build --platform linux/amd64,linux/arm64 --push --no-cache ${GL_TAGS} ${HUB_TAGS} .
  rules:
    - if: '$CI_COMMIT_TAG'
      when: delayed
      start_in: '5 minutes'
